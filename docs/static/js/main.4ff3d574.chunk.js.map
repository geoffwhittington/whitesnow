{"version":3,"sources":["logo.svg","screens/Search.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Search","props","classes","useState","searchText","setSearchText","feedbackToken","setFeedbackToken","apiToken","setApiToken","serverName","setServerName","trainingResults","setTrainingResults","setTaskResults","howToResults","setHowToResults","saveThumb","feedback","search","title","link","fetch","method","body","JSON","stringify","headers","then","response","json","data","error","console","ThumbUp","IconButton","onClick","url","ThumbDown","className","Grid","container","item","xs","TextField","label","onChange","e","target","value","id","onSubmit","trim","preventDefault","Accept","results","training","tasks","howtos","catch","log","fullWidth","InputProps","startAdornment","InputAdornment","position","Button","type","List","subheader","ListSubheader","component","map","ListItem","ListItemAvatar","ListItemText","primary","href","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ff3d574.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/icons/Link';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Search(props){\n  const classes = useStyles();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [feedbackToken, setFeedbackToken] = useState(\"\");\n  const [apiToken, setApiToken] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [trainingResults, setTrainingResults] = useState([]);\n  const [taskResults, setTaskResults] = useState([]);\n  const [howToResults, setHowToResults] = useState([]);\n\t\n  const handleOnSubmit = (e) => {\n      setSearchText(searchText.trim())\n      e.preventDefault();\n      if(searchText)\n         searchContent();\n  }\n\n  const onServerChange = (e) => {\n      setServerName(e.target.value);\n  }\n\n  const onSearchChange = (e) => {\n      setSearchText(e.target.value)\n  }\n\n  const onApiTokenChange = (e) => {\n      setApiToken(e.target.value);\n  }\n\n  const onFeedbackTokenChange = (e) => {\n      setFeedbackToken(e.target.value);\n  }\n\n  function saveThumb(feedback, search, title, link) {\n    try {\n        fetch(`https://v1.nocodeapi.com/cheezr/google_sheets/ItoBNEeneTgOWxgj/?api_key=${feedbackToken}&tabId=Sheet1`, {\n            method: \"post\",\n\t    body: JSON.stringify([[feedback,search,title,link]]),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => {\n        })\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n  }\n\n  const ThumbUp = ((props) => {\n      return (\n          <IconButton \n          onClick={() => {\n              saveThumb('up', props.search, props.title, props.url)\n          }}>\n          <ThumbUpIcon/>\n          </IconButton>\n      )\n  });\n\n  const ThumbDown = ((props) => {\n      return (\n          <IconButton\n          onClick={() => {\n               saveThumb('down', props.search, props.title, props.url)\n          }}>\n          <ThumbDownIcon/>\n          </IconButton>\n      )\n  });\n\n  function searchContent() {\n    fetch(\n      `${serverName}/api/v2/kb/?max_items_each=8&search=${searchText}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"Authorization\": `Token ${apiToken}`,\n        },\n      }\n    ).then(response => response.json())\n     .then(data => {\n       setTrainingResults(data.results.training);\n       setTaskResults(data.results.tasks);\n       setHowToResults(data.results.howtos);\n    })\n    .catch(function(error) {\n       console.log(error);\n    });\n  }\n    return (\n\t    <div className={classes.root}>\n            <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <TextField label={\"https://sde.example.com\"} onChange={onServerChange} value={serverName} />\n                <TextField label={\"Feedback token\"} onChange={onFeedbackTokenChange} value={feedbackToken} />\n                <TextField label={\"API token\"} onChange={onApiTokenChange} value={apiToken} />\n            </Grid>\n\n            <Grid item xs={12}>\n                <form id=\"myform\" onSubmit = {handleOnSubmit} >\n                <TextField\n                 fullWidth\n                 value={searchText}\n                 onChange={onSearchChange}\n                 id=\"input-with-icon-textfield\"\n                 InputProps={{\n                     startAdornment: (\n                         <InputAdornment position=\"start\">\n                             <Button type=\"submit\">\n                             <SearchIcon />\n                             </Button>\n                         </InputAdornment>\n                     ),\n                 }}\n                />\n                </form>\n            </Grid>\n            </Grid>\n                {trainingResults && (\n                <List\n                 subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Videos\n                    </ListSubheader>\n                 }\n                 >\n                {trainingResults.map((item) => (\n                  <ListItem>\n                    <ListItemAvatar>\n                        <PlayCircleOutlineIcon />\n                    </ListItemAvatar>\n                    <ListItemText primary={<a href={item.url}>{item.title}</a>} />\n                    { feedbackToken && (\n                        <>\n                        <ThumbUp search={searchText} title={item.title} url={item.url}/>\n                        <ThumbDown search={searchText} title={item.title} url={item.url}/>\n                        </>\n                    )}\n                  </ListItem>                \n                ))}\n                </List>\n                )}\n                {howToResults && (\n                <List\n                 subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    How Tos\n                    </ListSubheader>\n                 }\n                 >\n                {howToResults.map((item) => (\n                  <ListItem>\n                    <ListItemAvatar>\n                        <FormatAlignJustifyIcon />\n                    </ListItemAvatar>\n                    <ListItemText primary={<a href={item.url}>{item.title}</a>}/>\n                    { feedbackToken && (\n                        <>\n                        <ThumbUp search={searchText} title={item.title} url={item.url}/>\n                        <ThumbDown search={searchText} title={item.title} url={item.url}/>\n                        </>\n                    )}\n                  </ListItem>\n                ))}\n                </List>\n                )}\n            </div>\n    )\n}\n","import logo from './logo.svg';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport Search from \"./screens/Search\";\nimport './App.css';\n\nfunction App() {\n  return (\n     <Router basename={`${process.env.REACT_APP_DEPLOY_CONTEXT}`}>\n\t  <Route path=\"/\" exact component={Search} />\n     </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}