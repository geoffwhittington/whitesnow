{"version":3,"sources":["logo.svg","screens/dialog.js","screens/rating.js","screens/Search.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollDialog","props","React","useState","scroll","descriptionElementRef","useRef","useEffect","open","descriptionElement","current","focus","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","dividers","DialogContentText","ref","tabIndex","text","DialogActions","Button","onClick","color","labels","1","2","3","4","5","useStyles","makeStyles","root","width","display","alignItems","HoverRating","value","setValue","hover","setHover","search","url","classes","className","Rating","name","precision","onChange","event","newValue","onRating","onChangeActive","newHover","Box","ml","theme","flexGrow","paper","padding","spacing","textAlign","palette","secondary","Search","searchText","setSearchText","feedbackToken","setFeedbackToken","apiToken","setApiToken","serverName","setServerName","trainingResults","setTrainingResults","setTaskResults","howToResults","setHowToResults","dialogText","setDialogText","dialogOpen","setDialogOpen","dialogTitle","setDialogTitle","feedback","link","fetch","method","body","JSON","stringify","headers","then","response","json","data","error","console","Grid","container","item","xs","TextField","label","e","target","onSubmit","trim","preventDefault","Accept","results","training","tasks","howtos","catch","log","fullWidth","InputProps","startAdornment","InputAdornment","position","type","List","subheader","ListSubheader","component","map","ListItem","ListItemAvatar","ListItemText","primary","href","style","cursor","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11d5ee66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReactMarkdown from 'react-markdown'\n\nexport default function ScrollDialog(props) {\n  const [scroll, setScroll] = React.useState('paper');\n\n  const handleClickOpen = (scrollType) => () => {\n    setScroll(scrollType);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (props.open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, []);\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            <ReactMarkdown>{props.text}</ReactMarkdown>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\n\nconst labels = {\n  1: 'Unreviewed',\n  2: 'Irrelevant',\n  3: '50% solution',\n  4: '80% solution',\n  5: '100% solution!',\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 200,\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default function HoverRating(props) {\n  const [value, setValue] = React.useState(1);\n  const [hover, setHover] = React.useState(-1);\n  const [search,setSearch] = React.useState(props.search);\n  const [url,setUrl] = React.useState(props.url);\n  const [title,setTitle] = React.useState(props.title);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Rating\n        name=\"hover-feedback\"\n        value={value}\n        precision={1}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n          props.onRating(newValue, search, title, url);\n        }}\n        onChangeActive={(event, newHover) => {\n          setHover(newHover);\n        }}\n      />\n      {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n    </div>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/icons/Link';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport ScrollDialog from \"./dialog\";\nimport HoverRating from \"./rating\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Search(props){\n  const classes = useStyles();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [feedbackToken, setFeedbackToken] = useState(\"\");\n  const [apiToken, setApiToken] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [trainingResults, setTrainingResults] = useState([]);\n  const [taskResults, setTaskResults] = useState([]);\n  const [howToResults, setHowToResults] = useState([]);\n  const [dialogText, setDialogText] = useState(\"\");\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogTitle, setDialogTitle] = useState(\"\");\n\n  const handleOnSubmit = (e) => {\n      setSearchText(searchText.trim())\n      e.preventDefault();\n      if(searchText)\n         searchContent();\n  }\n\n  const onServerChange = (e) => {\n      setServerName(e.target.value);\n  }\n\n  const onSearchChange = (e) => {\n      setSearchText(e.target.value)\n  }\n\n  const onApiTokenChange = (e) => {\n      setApiToken(e.target.value);\n  }\n\n  const onFeedbackTokenChange = (e) => {\n      setFeedbackToken(e.target.value);\n  }\n\n  function onRating(feedback, search, title, link) {\n    try {\n        fetch(`https://v1.nocodeapi.com/cheezr/google_sheets/ItoBNEeneTgOWxgj/?api_key=${feedbackToken}&tabId=Sheet1`, {\n            method: \"post\",\n\t    body: JSON.stringify([[feedback,search,title,link]]),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => {\n        })\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n  }\n\n  const handleClose = () => { \n      setDialogOpen(false);\n  }\n\n  function searchContent() {\n    fetch(\n      `${serverName}/api/v2/kb/?max_items_each=8&search=${searchText}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"Authorization\": `Token ${apiToken}`,\n        },\n      }\n    ).then(response => response.json())\n     .then(data => {\n       setTrainingResults(data.results.training);\n       setTaskResults(data.results.tasks);\n       setHowToResults(data.results.howtos);\n    })\n    .catch(function(error) {\n       console.log(error);\n    });\n  }\n    return (\n\t    <div className={classes.root}>\n\t    <ScrollDialog title={dialogTitle} text={dialogText} open={dialogOpen} handleClose={handleClose}/>\n            <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <TextField label={\"https://sde.example.com\"} onChange={onServerChange} value={serverName} />\n                <TextField label={\"Feedback token\"} onChange={onFeedbackTokenChange} value={feedbackToken} />\n                <TextField label={\"API token\"} onChange={onApiTokenChange} value={apiToken} />\n            </Grid>\n\n            <Grid item xs={12}>\n                <form id=\"myform\" onSubmit = {handleOnSubmit} >\n                <TextField\n                 fullWidth\n                 value={searchText}\n                 onChange={onSearchChange}\n                 id=\"input-with-icon-textfield\"\n                 InputProps={{\n                     startAdornment: (\n                         <InputAdornment position=\"start\">\n                             <Button type=\"submit\">\n                             <SearchIcon />\n                             </Button>\n                         </InputAdornment>\n                     ),\n                 }}\n                />\n                </form>\n            </Grid>\n            </Grid>\n                {trainingResults && (\n                <List\n                 subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Videos\n                    </ListSubheader>\n                 }\n                 >\n                {trainingResults.map((item) => (\n                  <ListItem>\n                    <ListItemAvatar>\n                        <PlayCircleOutlineIcon />\n                    </ListItemAvatar>\n                    <ListItemText primary={<a href={`${item.url}`}>{item.title}</a>} />\n                    { feedbackToken && (\n\t\t\t<HoverRating key={`tr${item.id}`} search={searchText} title={item.title} url={item.url} onRating={onRating}/>\n                    )}\n                  </ListItem>                \n                ))}\n                </List>\n                )}\n                {howToResults && (\n                <List\n                 subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    How Tos\n                    </ListSubheader>\n                 }\n                 >\n                {howToResults.map((item) => (\n                  <ListItem style={{cursor: 'pointer'}}>\n                    <ListItemAvatar>\n                        <FormatAlignJustifyIcon />\n                    </ListItemAvatar>\n                    <ListItemText primary={item.title} onClick={() => {setDialogOpen(true); setDialogText(item.text); setDialogTitle(item.title)}} />\n                    { feedbackToken && (\n\t\t\t<HoverRating key={`howto${item.id}`} search={searchText} title={item.title} url={item.url} onRating={onRating}/>\n                    )}\n                  </ListItem>\n                ))}\n                </List>\n                )}\n            </div>\n    )\n}\n","import logo from './logo.svg';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport Search from \"./screens/Search\";\nimport './App.css';\n\nfunction App() {\n  return (\n     <Router basename={`${process.env.REACT_APP_DEPLOY_CONTEXT}`}>\n\t  <Route path=\"/\" exact component={Search} />\n     </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}