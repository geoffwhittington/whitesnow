{"version":3,"sources":["logo.svg","screens/dialog.js","screens/rating.js","screens/Search.js","screens/Index.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollDialog","props","React","useState","scroll","descriptionElementRef","useRef","useEffect","open","descriptionElement","current","focus","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","dividers","DialogContentText","ref","tabIndex","text","DialogActions","Button","onClick","color","labels","1","2","3","4","5","useStyles","makeStyles","root","width","display","alignItems","HoverRating","value","setValue","hover","setHover","classes","className","Rating","precision","onChange","e","v","onRating","search","url","onChangeActive","event","newHover","Box","ml","theme","flexGrow","paper","padding","spacing","textAlign","palette","secondary","Search","q","useParams","searchText","setSearchText","feedbackToken","setFeedbackToken","apiToken","setApiToken","serverName","setServerName","trainingServer","setTrainingServer","trainingResults","setTrainingResults","setTaskResults","howToResults","setHowToResults","dialogText","setDialogText","dialogOpen","setDialogOpen","dialogTitle","setDialogTitle","drawerOpen","setDrawerOpen","feedback","link","fetch","method","body","JSON","stringify","headers","then","response","json","data","error","console","toggleDrawer","type","key","style","float","IconButton","aria-label","component","Drawer","anchor","TextField","label","target","Grid","container","item","xs","onSubmit","trim","preventDefault","Accept","training","i","results","length","t","replace","push","tasks","howtos","catch","log","fullWidth","InputProps","startAdornment","InputAdornment","position","List","subheader","ListSubheader","map","ListItem","ListItemAvatar","ListItemText","primary","href","cursor","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29361e43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReactMarkdown from 'react-markdown'\n\nexport default function ScrollDialog(props) {\n  const [scroll, setScroll] = React.useState('paper');\n\n  const handleClickOpen = (scrollType) => () => {\n    setScroll(scrollType);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (props.open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, []);\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            <ReactMarkdown>{props.text}</ReactMarkdown>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\n\nconst labels = {\n  1: 'Unreviewed',\n  2: 'Irrelevant',\n  3: '50% solution',\n  4: '80% solution',\n  5: '100% solution!',\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 200,\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default function HoverRating(props) {\n  const [value, setValue] = React.useState(1);\n  const [hover, setHover] = React.useState(-1);\n\n  const classes = useStyles();\n  \n  const onRatingChange = (e, v) => {\n    setValue(v);\n    props.onRating(v, props.search, props.title, props.url);\n  }\n  \n  return (\n    <div className={classes.root}>\n      <Rating\n\tkey={props.id}\n        value={value}\n        precision={1}\n        onChange={onRatingChange}\n        onChangeActive={(event, newHover) => {\n          setHover(newHover);\n        }}\n      />\n      {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n    </div>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/icons/Link';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport ScrollDialog from \"./dialog\";\nimport HoverRating from \"./rating\";\nimport Drawer from '@material-ui/core/Drawer';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Search(props){\n  const classes = useStyles();\n  let { q } = useParams();\n\n  const [searchText, setSearchText] = useState(q);\n  const [feedbackToken, setFeedbackToken] = useState(\"\");\n  const [apiToken, setApiToken] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [trainingServer, setTrainingServer] = useState(\"https://cd.sdelements.com\");\n  const [trainingResults, setTrainingResults] = useState([]);\n  const [taskResults, setTaskResults] = useState([]);\n  const [howToResults, setHowToResults] = useState([]);\n  const [dialogText, setDialogText] = useState(\"\");\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogTitle, setDialogTitle] = useState(\"\");\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleOnSubmit = (e) => {\n      setSearchText(searchText.trim())\n      e.preventDefault();\n      if(searchText)\n         searchContent();\n  }\n\n  const onServerChange = (e) => {\n      setServerName(e.target.value);\n  }\n\n  const onSearchChange = (e) => {\n      setSearchText(e.target.value)\n  }\n\n  const onApiTokenChange = (e) => {\n      setApiToken(e.target.value);\n  }\n\n  const onTrainingServerChange = (e) => {\n      setTrainingServer(e.target.value);\n  }\n\n  const onFeedbackTokenChange = (e) => {\n      setFeedbackToken(e.target.value);\n  }\n\n  function onRating(feedback, search, title, link) {\n    try {\n        fetch(`https://v1.nocodeapi.com/cheezr/google_sheets/ItoBNEeneTgOWxgj/?api_key=${feedbackToken}&tabId=Sheet1`, {\n            method: \"post\",\n\t    body: JSON.stringify([[feedback,search,title,link]]),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => {\n        })\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n  }\n\n  const handleClose = () => { \n      setDialogOpen(false);\n  }\n\n  function searchContent() {\n    fetch(\n      `${serverName}/api/v2/kb/?max_items_each=8&search=${searchText}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"Authorization\": `Token ${apiToken}`,\n        },\n      }\n    ).then(response => response.json())\n     .then(data => {\n       var training = [];\n       var i = 0;\n\n       for (i=0; i<data.results.training.length; i++){\n\t   var t = data.results.training[i];\n\t   t.url = t.url.replace(\"http://example.com\", trainingServer)\n           training.push(t);\n       }\n       setTrainingResults(training);\n       setTaskResults(data.results.tasks);\n       setHowToResults(data.results.howtos);\n    })\n    .catch(function(error) {\n       console.log(error);\n    });\n  }\n    const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setDrawerOpen(open);\n   };\n\n    return (\n\t    <div className={classes.root}>\n\n\t    <ScrollDialog title={dialogTitle} text={dialogText} open={dialogOpen} handleClose={handleClose}/>\n            <div style={{float:\"right\"}}>\n                <IconButton aria-label=\"configure\" onClick={toggleDrawer(true)} component=\"span\">\n                    <SettingsIcon />\n                </IconButton>\n            </div>\n\t    <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n\t       <TextField label={\"https://sde.example.com\"} onChange={onServerChange} value={serverName} />\n               <TextField label={\"Feedback token\"} onChange={onFeedbackTokenChange} value={feedbackToken} />\n\t       <TextField label={\"API token\"} onChange={onApiTokenChange} value={apiToken} />\n\t       <TextField label={\"Training Server\"} onChange={onTrainingServerChange} value={trainingServer} />\n\t    </Drawer>\n            <Grid container spacing={3}>\n\n            <Grid item xs={12}>\n                <form id=\"myform\" onSubmit = {handleOnSubmit} >\n                <TextField\n                 fullWidth\n                 value={searchText}\n                 onChange={onSearchChange}\n                 id=\"input-with-icon-textfield\"\n                 InputProps={{\n                     startAdornment: (\n                         <InputAdornment position=\"start\">\n                             <Button type=\"submit\">\n                             <SearchIcon />\n                             </Button>\n                         </InputAdornment>\n                     ),\n                 }}\n                />\n                </form>\n            </Grid>\n            </Grid>\n                {trainingResults && (\n                <List\n                 subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Videos\n                    </ListSubheader>\n                 }\n                 >\n                {trainingResults.map((item) => (\n                  <ListItem key={`trainingItem${item.id}`}>\n                    <ListItemAvatar>\n                        <PlayCircleOutlineIcon />\n                    </ListItemAvatar>\n                    <ListItemText primary={<a target=\"_training\" href={`${item.url}`}>{item.title}</a>} />\n                    { feedbackToken && (\n\t\t\t<HoverRating key={`tr${item.id}`} id={`tr${item.id}`} search={searchText} title={item.title} url={item.url} onRating={onRating}/>\n                    )}\n                  </ListItem>                \n                ))}\n                </List>\n                )}\n                {howToResults && (\n                <List\n                 subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    How Tos\n                    </ListSubheader>\n                 }\n                 >\n                {howToResults.map((item) => (\n                  <ListItem key={`howtoItem${item.id}`} style={{cursor: 'pointer'}}>\n                    <ListItemAvatar>\n                        <FormatAlignJustifyIcon />\n                    </ListItemAvatar>\n                    <ListItemText primary={item.title} onClick={() => {setDialogOpen(true); setDialogText(item.text); setDialogTitle(item.title)}} />\n                    { feedbackToken && (\n\t\t\t<HoverRating id={`howtoRating${item.id}`} search={searchText} title={item.title} url={item.url} onRating={onRating}/>\n                    )}\n                  </ListItem>\n                ))}\n                </List>\n                )}\n            </div>\n    )\n}\n","import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport HoverRating from \"./rating\";\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Search(props){\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const feedbackToken = 'igzLoDPGezxWNlsQl';\n  const classes = useStyles();\n\n  const onQueryChange = (e) => {\n      setSearchQuery(e.target.value);\n  }\n\n  function onRating(feedback, search, title, link) {\n    try {\n        fetch(`https://v1.nocodeapi.com/cheezr/google_sheets/ItoBNEeneTgOWxgj/?api_key=${feedbackToken}&tabId=Sheet1`, {\n            method: \"post\",\n            body: JSON.stringify([[feedback,search,title,link]]),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => {\n        })\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n  }\n\n  return (\n\t    <div className={classes.root}>\n\t        <h1>Task 1</h1>\n\t        <Typography paragraph={true}>\n\t        Ultimate ascetic victorious faith derive philosophy salvation against ultimate. Abstract marvelous marvelous aversion god passion pious chaos suicide.\n\n\t  Salvation depths joy pious justice ultimate evil revaluation. Malelovent decieve pinnacle will aversion.\n\n\t  Dead enlightenment truth decrepit pinnacle. Marvelous philosophy moral morality noble victorious revaluation insofar endless right contradict holiest inexpedient free. Mountains strong play gains superiority grandeur ascetic superiority reason prejudice against war madness eternal-return. Decrepit zarathustra chaos right intentions burying faithful hatred. Free contradict against god zarathustra gains intentions pinnacle oneself victorious will. Battle dead mountains merciful pinnacle ascetic insofar society holiest.\n\t        </Typography>\n\t        <h2>Query</h2>\n\t         <TextField label={\"Search query\"} onChange={onQueryChange} value={searchQuery} />\n\n\t        <h2>Resources</h2>\n\n                <Button variant=\"contained\" target=\"_external1\" href={`https://google.com/search?q=${searchQuery}`}>Option 1</Button>\n\t        <HoverRating search={searchQuery} title=\"option1\" url={`https://google.com/search?q=${searchQuery}`} onRating={onRating}/>\n<br/>\n                 <Button variant=\"contained\" target=\"_external2\" href={`https://stackoverflow.com/search?q=${searchQuery}`}>Option 2</Button>\n\t        <HoverRating search={searchQuery} title=\"option2\" url={`https://stackoverflow.com/search?q=${searchQuery}`} onRating={onRating}/>\n<br/>\n\n                <Button variant=\"contained\" target=\"_external3\" href={`/Search/${searchQuery}`}>Option 3</Button>\n\t        <HoverRating search={searchQuery} title=\"option3\" url={`/Search?q=${searchQuery}`} onRating={onRating}/>\n<br/>\n            </div>\n  )\n}\n","import logo from './logo.svg';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport Search from \"./screens/Search\";\nimport Index from \"./screens/Index\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n     <Router basename={`${process.env.REACT_APP_DEPLOY_CONTEXT}`}>\n\t  <Route path=\"/:q\" exact component={Search} />\n     </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}